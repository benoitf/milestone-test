on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  set-milestone:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - id: compute-milestone
        run: |
          cd packages/core
          echo "MILESTONE_NUMBER=$(npm --no-git-tag-version version minor | cut -c 2-)" >> $GITHUB_ENV
      - id: set 
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            // get milestone
            const milestone = process.env.MILESTONE_NUMBER
            console.log(`Using milestone with name ${milestone}`)
            // check if milestone exists ?
            const issuesGetMilestonesParams = {
              owner: context.repo.owner,
              repo: context.repo.repo
            };

            // search if milestone is already defined
            const response = await github.issues.listMilestones(issuesGetMilestonesParams);
            let githubMilestone = response.data.find(milestoneResponse => milestoneResponse.title === milestone);
    
            // not defined, create it
            if (!githubMilestone) {
              const issuesCreateMilestoneParams = { owner: context.repo.owner, repo:context.repo.repo, title: milestone };
              const createMilestoneResponse = await github.issues.createMilestone(issuesCreateMilestoneParams);
              githubMilestone = createMilestoneResponse.data;
            }
            
            // Grab the milestone number
            const milestoneNumber = githubMilestone.number;

            // sets the milestone from the number
            const issuesUpdateParams = { owner: context.repo.owner, repo:context.repo.repo, milestone: milestoneNumber, issue_number: context.issue.number };
            await github.issues.update(issuesUpdateParams);
 
